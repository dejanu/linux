#---------------------------------Profiles & Shell--------------------------------------------------
https://bencane.com/2013/09/16/understanding-a-little-more-about-etcprofile-and-etcbashrc/

0)Display all the SHELL VARIABLES, run:
set

00)Display all the ENVIRONMENT VARIABLES, run:
env

1)Verify which shell your're running:
echo $SHELL

2)Verify env var PATH, which describes the location of different progs
echo $PATH

PATH is set by the shell every time it launches

3)Add a new program to path (efemere)

export PATH=$PATH:/place/with/the/file

4)Add export PATH=$PATH:/place/with/the/file line in the ~/.bash_profile, ~/.bashrc, or ~/.profile



#---------------------------------Networking--------------------------------------------------

iwconfig #configure a wireless network interface , used to display wifi statistics from /proc/net/wireless
ifconfig  ##interface config of the network interfaces on the system eth0 is for NIC connected to the network, lo the loopback, wlan0 or unifi for wireless
ifconfig eth0 up   ## bring up or down an interface
ip address show

echo 0 >/proc/sys/net/ipv4/icmp_echo_ignore_all  ### 0: renable ping reponse 1: disable ping reponse   

netstat -tulpn %%% list all ports for TCP and UDP connections

#change hostname
vim /etc/hostname 
vim /etc/hosts

#bypass DNS resolution(could not resolve DNS ) - A match found in the /etc/hosts file will be used before any DNS entry
vim /etc/hosts and add ip and domain name
vim /etc/resolv.conf

Well, the order of name resolution is actually defined in /etc/nsswitch.conf, which usually has this entry:

hosts:          files dns
which means "try files (/etc/hosts); and if it fails, try DNS."

https://nambirajeshblog.wordpress.com/2016/12/12/difference-between-etchosts-vs-etcresolv-conf-in-linux/

#DNS resolution II - netconfig, NetworkManager, resolvconf, rdnssd, and systemd-resolved try to control the Linux system DNS resolution configuration file
vim /etc/resolf.conf


#--------------------Mount-points-------------------------------------------------------------------
In order to automatically mount file at boot modify /etc/fstab. 
In general you should mount to /mnt directory

>> mount -v %% view mount points
>> findmnt

>> mount /dev/sdaX /media/usb_created_dir %% mount volume or  mount /dev/sdaX /mnt/usb_created_dir
>> umount /dev/sdaX /media/usr_created_dir

mount | grep "^/dev/sda"  // attach the filesystem found on some device
ls /dev/sd*  //view attached filessytems
cat /sys/bus/usb/devices/*/product | grep STICK_NAME //view inserted USBs  


# --------------------Search--------------------------------------------------------------------------------

find / -type f file_name %%%%Search everywhere
grep -irl "string" /etc/*  %%%search in files
find /home/alex -iname "*.ini"  
find /home/alex -type d -iname "dir_name"
find . -type f -name file_name

#-----------------------FileSize----------------------------------------------------------------------------


 du -sh  /dir_path/file_name  %%% disk usage for a certain file or directory
 df -ah   %% disk free, available and used space

#------------------------Service and procs----------------------------------------------------------
systemctl status docker %%% verify service status on older distro is service docker status


ps -aux | grep 'run_test'
lsof  %%% View files opened by a process  $(ls -l /proc/`pidof proccess`/fd)
 
   
# 1. Stop the web services on web server nodes - service httpd stop
# 2. Shutdown the database services on db server nodes - service mysql stop
# 3. Restart all servers (web and db) at once - /sbin/shutdown -r
# 4. Start the database services on db server nodes - service mysql start
# 5. Start the web services on web server nodes - service httpd start



#create hardlink ln and symbolic-link ss: target LINK_NAME-------------------------------------------------------------------
ln target.* my_name
ls target.* my_name

-----------------------FIlE-101----------------------

./script.sh |& tee output_file  %print to STDOUT and redirect to file in the same time

# Count lines,chars:
>> wc -n
>> wv -l

#STDIN to file
>> cat > file

# View first 5 lines from a file , or paginate the result in terminal
>> head -n5 file_name
>> cat file_name | more

# Search in file content
>> grep -i -E "first|second|third" file.txt #search in fie.txt using grouping for "first" or "second" or "third" words

egrep -o '^[^.]+' %%%%% grep until a desired character , in this example is the .
grep -o -E '[0-9]+'  %%%%%%grep only from a numbercat

ls -l | grep YOOO //returns all desired files which have YOO in their name
grep -ni 'word' ./path_of_file/file.txt  //searches inside files
grep -A10 -B10    %%%%%%grep after and before 10 lines




sed -i 's/word1/word2/g' ./path_of_file  %%%%%% replaces word1 with word2
sed '1~2d'   ./filepath  %%%print without the first two lines
sed -n /root/p             %%%prints the line with the patter in this case is 'root'
sed '/^$/d'               %%% eliminates blank lines

read inf
echo "$inf"
cat test.txt
sed -i "s/hello/$inf/g" /home/cg/root/test.txt    %%%%%% give sed a variable as a parameter



tr 'E' 'e'         %%%%%%%    replaces E with e
tr -d 'e'           %%%%%    delete "e" character
tr -d [:digit:]     %%%%  delete all digits
tr -cd [:digit:]    %%%%% delete all chars except digits
tr -cd [:print:]     %%%% remove all non printable characters
tr -s '\n' ' ' < file.txt %%%%  translate all newlines into spaces and make the result as a single line.




# Select only the entries in a particular column, search util a desired delimiter " " and returning only the 9th field
>> cat sql.log | cut -d" " -f9 | sort | uniq  
cut -c2 file.txt //return the chars from each line o  second column 
cut -c2-3 file.txt //range 2-3th collumns 

#view differences between two files------------------------------------------------------------------
diff file1 file2
diff -s file1.txt file2.txt %%%outputs files are identical if they are



#change color-------------------------------------------------------------------------------
echo -e "\e[1;32m text color change \e[0m"


#sound------------------------------------------------------------------------------------
cat /proc/asound/cards  //view sound cards
aplay -l     //view sound cards
pactl set-sin-mute 0 1  //mute sink
pactl -- set-sink-volume 0 100%  //change volume sink
pactl stat  /view sinc status
arecord -d 10 /tmp/sound_test.wav   //record for 10sec sound to tmp directory
aplay 


#---------------------------------Tricks--------------------------------------------------

%History activation
set +x 

%Redirect STDIN to file
cat > inputfile.txt
echo 'write_to_file1 >> inputfile.txt

%Change hostname name
vim /etc/hostname
vim /etc/hosts

%Change back to last dir
cd -

%Execute last command (with sudo)
sudo !!
