WINDOWS /? = Use the help switch
----------------------
route print = view interface list, route table, persistent routes
netstat -r = display host routing  table alias route print (returns Interface list, IPV4 and IPV6 route table)
netstat -a = view TCP connections abd UDP ports
netstat -f = view Fully Qualified Domain Name (FQDN) 
tracert address
netsh wlan show profiles = show all preavious connection of wireless AP
netsh wlan show profile PROFILE_NAME key=clear
nslookup www.google.com = query the Domain Name System table 
$ scp your_username@remotehost.edu:foobar.txt /some/local/directory


UNIX --help
-----------------------
route -n = view routing table,get default getway ip
ip route show = get deafault getway ip and get the metric also
nestat = network statistics: -r (view routing table)  -s (statistics) -a (list all ports UPD and TCP)
nslookup domain_name.com = returns the ip associated with a domain (dig +short domain_name.com or host domain_name.com)
nmap -sS -O gateway.ip/24 = get all hosts from LAN (loopback and gateway will appear)
nmap -sP gateway.ip/24 =  get all hosts from LAN (loopback and gateway will appear) ( https://security.stackexchange.com/questions/36198/how-to-find-live-hosts-on-my-network )

# get FQDN 
$ hostname -A
$ hostnamectl

# get IP/interface
$ ip addr  (with no arguments default to #ip address show)
$ hostname -i
$ hostname -I
------------------------------------------------------------------------------------------------------------
# dig — DNS lookup utility, interogates DNS name servers from /etc/resolf.conf
# nslookup — Query a name server for information about a remote host.
# ping — Send ICMP ECHO_REQUEST packets to network hosts.
-----------------------------------------------------------------------------------------------------------

## DNS - hierachical system of caching servers
#  /etc/hosts (file for method for resolution for static lookup) will be used before any DNS entry
#  /etc/resolf.conf (populated with DNS records issued by DHCP server) specifies the nameservers for resolver lookups,where it will actually use the DNS protocol for resolving the hostnames

# DNS and reverse DNS lookups (converting domain names to IP addresses and vice versa)
$ host <ip>
$ echo 0 >/proc/sys/net/ipv4/icmp_echo_ignore_all  ### 0: renable ping reponse 1: disable ping reponse 0  
$ dig @nameserver FQDN +trace

# DNS lookup (query DNS to find the IP of a certaing host) , chain for DNS lookup: local -> resolver -> root server -> Top Level Domain server -> Name Server
$ nslookup python.org
$ host -a python.org


-----------------------------------------------------------------------------------------------------------
** PORT - 16 bit number, each IP on a device has 65,535 possible ports
A port is an endpoint attache to an IP address, and ports are claimed by a process running on the host

# view list of services and their assgined ports
$ cat /etc/services
